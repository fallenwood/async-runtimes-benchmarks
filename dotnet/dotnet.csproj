<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <PublishAot>true</PublishAot>
    <InvariantGlobalization>true</InvariantGlobalization>
    <OptimizationPreference>Speed</OptimizationPreference>
  </PropertyGroup>

  <PropertyGroup>
    <DisableUnsupportedError>true</DisableUnsupportedError>
  </PropertyGroup>

  <UsingTask TaskName="PrependPath"
             TaskFactory="RoslynCodeTaskFactory"
             AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">

    <ParameterGroup>
      <Value ParameterType="System.String" Required="true" />
    </ParameterGroup>

    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          Environment.SetEnvironmentVariable("PATH", Value + Path.PathSeparator + Environment.GetEnvironmentVariable("PATH"));
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="SetPathToClang"
          BeforeTargets="SetupOSSpecificProps">
      <Message Text="MSBuildThisFileDirectory $(MSBuildThisFileDirectory)" />

    <PrependPath Value="$(MSBuildThisFileDirectory)" />
  </Target>

  <!-- BEGIN: Works around ILCompiler targets not detecting this as a cross compilation -->
  <Target Name="OverwriteTargetTriple"
          AfterTargets="SetupOSSpecificProps"
          BeforeTargets="LinkNative">

    <PropertyGroup>
      <CrossCompileRid />
      <CrossCompileRid>$(RuntimeIdentifier)</CrossCompileRid>

      <CrossCompileArch />
      <CrossCompileArch Condition="$(CrossCompileRid.EndsWith('-x64'))">x86_64</CrossCompileArch>
      <CrossCompileArch Condition="$(CrossCompileRid.EndsWith('-arm64'))">aarch64</CrossCompileArch>

      <TargetTriple />
      <TargetTriple Condition="'$(CrossCompileArch)' != '' and ($(CrossCompileRid.StartsWith('linux-musl')) or $(CrossCompileRid.StartsWith('alpine')))">$(CrossCompileArch)-linux-musl</TargetTriple>
      <TargetTriple Condition="'$(CrossCompileArch)' != '' and $(CrossCompileRid.StartsWith('linux'))">$(CrossCompileArch)-linux-gnu</TargetTriple>
    </PropertyGroup>

    <ItemGroup>
      <LinkerArg Include="--target=$(TargetTriple)" />
    </ItemGroup>

  </Target>
  <!-- END: Works around ILCompiler targets not detecting this as a cross compilation -->
</Project>
